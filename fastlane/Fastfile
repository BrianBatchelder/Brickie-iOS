default_platform(:ios)
application_version = "1.3.2"

platform :ios do
  ENV['FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT']='2000'

  before_all do
    # setup_ci(force:true)
  end

  lane :check_env_keys do 
    environnmentKeys = ["APP_IDENTIFIER","APPLE_ID","ITC_TEAM_ID",
                "TEAM_ID","FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD",
                "BRICKSET_API_KEY"
              ]
    for key in environnmentKeys do
      value = ENV[key] ? ENV[key] :"No Set"
      UI.message key + "-> " + value
    end 

  end
  lane :version_update do 
    increment_version_number(version_number:application_version)
    increment_build_number(build_number: number_of_commits)

    git_commit(path: ["./Brickie.xcodeproj/project.pbxproj", "sources/assets/Info.plist"], message: "Version Bump v#{application_version} (#{number_of_commits})")

  end

  lane :tag do |options|
    tag_name = "v#{appVersion}_#{number_of_commits}"
    add_git_tag(tag: tag_name)
    push_git_tags(tag:tag_name)
  end

  lane :certificates do 
    keychain_name =  ENV["KEYCHAIN_NAME"]
    keychain_pass =  ENV["KECHAIN_PASSWORD"]
    create_keychain(
      name: keychain_name,
      password: keychain_pass,
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false
    )

    match(
      type:"appstore",
      readonly:true,
      clone_branch_directly:true,
      shallow_clone: true,
      # output_path:"certs",
      keychain_name: keychain_name,
      keychain_password: keychain_pass
    )
  end

  lane :local do
    version_update
    build_app
    publish
  end
  lane :publish do 
    stamp_changelog(
        section_identifier: "Version #{application_version} (#{number_of_commits})",
      )
      changelog = read_changelog(
          excluded_markdown_elements: ['-', '##','###']	# Specify which markdown elements should be excluded
      )
      
    upload_to_testflight(
        reject_build_waiting_for_review:true,
        #skip_waiting_for_build_processing:false
        groups:["Beta Public"],
        distribute_external:true,
        changelog:changelog
      )
    
  end 

  lane :ci do |options|
    version_update
    certificates
    build_app
  end 
  lane :process do |options|
    version_update
    certificates
    build_app

    brch = options[:branch] ? options[:branch] : git_branch
    if ["master"].include? brch
      publish      
    end
  end

  lane :test do 
    build_app
  end
end
